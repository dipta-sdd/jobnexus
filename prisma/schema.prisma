// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../lib/generated/prisma"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}


model User {
  id       String   @id @default(uuid())
  email    String   @unique
  password String
  name     String?
  clients  Client[]
  projects Project[]
  logs     InteractionLog[]
  reminders Reminder[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model InteractionLog {
  id        String   @id @default(uuid())
  type      String   // "call", "meeting", "email"
  notes     String
  date      DateTime @default(now())
  clientId  String
  client    Client   @relation(fields: [clientId], references: [id])
  projectId String?
  project   Project? @relation(fields: [projectId], references: [id])
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Reminder {
  id        String   @id @default(uuid())
  title     String
  notes     String?
  dueDate   DateTime
  status    String   @default("Pending")
  clientId  String
  client    Client   @relation(fields: [clientId], references: [id])
  projectId String?
  project   Project? @relation(fields: [projectId], references: [id])
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Client {
  id        String   @id @default(uuid())
  name      String
  email     String
  phone     String
  company   String?
  notes     String?
  projects  Project[]
  logs      InteractionLog[]
  reminders Reminder[]
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Project {
  id        String   @id @default(uuid())
  title     String
  description String?
  budget    Float
  startDate DateTime @default(now())
  deadline  DateTime
  status    String
  clientId  String
  client    Client   @relation(fields: [clientId], references: [id])
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  logs      InteractionLog[]
  reminders Reminder[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}